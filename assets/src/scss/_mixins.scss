//================================================================//
//===========================[ LAYOUT ]===========================//
@mixin clearfix { 
	*zoom:1;
    &:before, &:after { 
		content: ""; 
		display: table; 
	}
    &:after { 
		clear: both; 
	}
}

@mixin pixel-to-percent ($parent-px, $pixToPercent){
	$width : ($pixToPercent * 100%) / $parent-px;
	width: $width ;
}

@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; 
	-moz-box-sizing: $box-model; 
	box-sizing: $box-model;
}

@mixin pixel-to-percent ($parent-px, $pixToPercent){
	$width : ($pixToPercent * 100%) / $parent-px;
	width: $width ;
}


//===============================================================//
//==========================[ POSITION ]=========================//
@mixin inline-block {
	display: -moz-inline-stack;
	-moz-box-orient: vertical;
	display: inline-block;
	*display: inline;
	vertical-align: top;
	*zoom: 1;
}

@mixin center-absolute {
    position: absolute;
    left: 50%;
    top: 50%;
    @include transform(translate(-50%, -50%));
}

@mixin center-relative-v {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}
@mixin center-relative {
	position: relative;
	top: 50%;
	left: 50%;
	-webkit-transform: translateY(-50%), translateX(-50%);
	-ms-transform: translateY(-50%), translateX(-50%);
	transform: translateY(-50%), translateX(-50%);
}

@mixin vertical-center-parent{
    display: flex;
    align-items: center;
    justify-content: center;
}



//=================================================================//
//==========================[ TYPOGRAPHY ]=========================//
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin truncate ($max-width){
  display: inline-block;
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}



//=================================================================//
//===========================[ ELEMENT ]==========================//
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin placeholder( $color ) {
	&::-webkit-input-placeholder { color: $color; }
	&:-moz-placeholder { color: $color; }
	&:-ms-input-placeholder { color: $color; }
}

@mixin hide-text($break: false, $indent: 200%, $align: left, $overflow: hidden) {
	@if $break {
		position: absolute;
		top: 0; left: 0;
		pointer-events: none;
	}
	text: {
		indent: $indent;
		align: $align;
	}
	font-size: 0;
	white-space: nowrap;
	@if $overflow {
		overflow: $overflow;
	}
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

@mixin unlist($margin: true, $padding: true) {
	@if $margin {
		@if $margin == 'vertical' {
			@include flush--ends;
		} @elseif $margin == 'horizontal' {
			@include flush--sides;
		} @else {
			margin: 0;
		}
	}
	@if $padding {
		padding: 0;
	}
	list-style: none;
}

@mixin unselectable {
	-webkit-touch-callout: none;
	user-select: none;
}




//=================================================================//
//====================[ TRANSITION & ANIMATION ]====================//
@mixin animationDelay ($delay) { 
	-webkit-animation-delay: $delay;  
	-moz-animation-delay:    $delay;
	-ms-animation-delay:     $delay; 
	-o-animation-delay:      $delay;  
    animation-delay:      $delay; 
}

@mixin transform-origin ($val) { 
	-webkit-animation-delay: $val;  
	-moz-animation-delay:    $val;
	-ms-animation-delay:     $val; 
	-o-animation-delay:      $val;  
    animation-delay:      $val; 
}

@mixin transform($transform-option) {
	-webkit-transform: $transform-option; 
	-moz-transform: $transform-option; 
	transform: $transform-option;
}

@mixin transition($transition-option) {
	-webkit-transition: $transition-option; 
	-moz-transition: $transition-option; 
	transition: $transition-option;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
@mixin animation($animations) {
	-moz-animation: $animations;
	-o-animation: $animations;
	-ms-animation: $animations;
	-webkit-animation: $animations;
	animation: $animations;
}





